% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataProcess.R
\name{dataProcess}
\alias{dataProcess}
\title{Process MS data: clean, normalize and summarize before differential analysis}
\usage{
dataProcess(
  raw,
  logTrans = 2,
  normalization = "equalizeMedians",
  nameStandards = NULL,
  featureSubset = "all",
  remove_uninformative_feature_outlier = FALSE,
  min_feature_count = 2,
  n_top_feature = 3,
  summaryMethod = "TMP",
  equalFeatureVar = TRUE,
  censoredInt = "NA",
  MBimpute = TRUE,
  remove50missing = FALSE,
  fix_missing = NULL,
  maxQuantileforCensored = 0.999,
  use_log_file = TRUE,
  append = FALSE,
  verbose = TRUE,
  log_file_path = NULL,
  numberOfCores = 1
)
}
\arguments{
\item{raw}{name of the raw (input) data set.}

\item{logTrans}{base of logarithm transformation: 2 (default) or 10.}

\item{normalization}{normalization to remove systematic bias between MS runs. 
There are three different normalizations supported:
'equalizeMedians' (default) represents constant normalization (equalizing the medians) 
based on reference signals is performed. 
'quantile' represents quantile normalization based on reference signals 
'globalStandards' represents normalization with global standards proteins. 
If FALSE, no normalization is performed.}

\item{nameStandards}{optional vector of global standard peptide names. 
Required only for normalization with global standard peptides.}

\item{featureSubset}{"all" (default) uses all features that the data set has. 
"top3" uses top 3 features which have highest average of log-intensity across runs. 
"topN" uses top N features which has highest average of log-intensity across runs. 
It needs the input for n_top_feature option. 
"highQuality" flags uninformative feature and outliers.}

\item{remove_uninformative_feature_outlier}{optional. Only required if 
featureSubset = "highQuality". TRUE allows to remove 
1) noisy features (flagged in the column feature_quality with "Uninformative"),
2) outliers (flagged in the column, is_outlier with TRUE, 
before run-level summarization. FALSE (default) uses all features and intensities 
for run-level summarization.}

\item{min_feature_count}{optional. Only required if featureSubset = "highQuality".
Defines a minimum number of informative features a protein needs to be considered
in the feature selection algorithm.}

\item{n_top_feature}{optional. Only required if featureSubset = 'topN'.
It that case, it specifies number of top features that will be used.
Default is 3, which means to use top 3 features.}

\item{summaryMethod}{"TMP" (default) means Tukey's median polish, 
which is robust estimation method. "linear" uses linear mixed model.}

\item{equalFeatureVar}{only for summaryMethod = "linear". default is TRUE. 
Logical variable for whether the model should account for heterogeneous variation 
among intensities from different features. Default is TRUE, which assume equal 
variance among intensities from features. FALSE means that we cannot assume equal 
variance among intensities from features, then we will account for heterogeneous 
variation from different features.}

\item{censoredInt}{Missing values are censored or at random. 
'NA' (default) assumes that all 'NA's in 'Intensity' column are censored. 
'0' uses zero intensities as censored intensity. 
In this case, NA intensities are missing at random. 
The output from Skyline should use '0'. 
Null assumes that all NA intensites are randomly missing.}

\item{MBimpute}{only for summaryMethod = "TMP" and censoredInt = 'NA' or '0'. 
TRUE (default) imputes 'NA' or '0' (depending on censoredInt option) 
by Accelated failure model. FALSE uses the values assigned by cutoffCensored.}

\item{remove50missing}{only for summaryMethod = "TMP". TRUE removes the runs 
which have more than 50\% missing values. FALSE is default.}

\item{fix_missing}{Optional, same as the `fix_missing` parameter in MSstatsConvert::MSstatsBalancedDesign function}

\item{maxQuantileforCensored}{Maximum quantile for deciding censored missing values, default is 0.999}

\item{use_log_file}{logical. If TRUE, information about data processing
will be saved to a file.}

\item{append}{logical. If TRUE, information about data processing will be added
to an existing log file.}

\item{verbose}{logical. If TRUE, information about data processing wil be printed
to the console.}

\item{log_file_path}{character. Path to a file to which information about 
data processing will be saved. 
If not provided, such a file will be created automatically.
If `append = TRUE`, has to be a valid path to a file.}

\item{numberOfCores}{Number of cores for parallel processing. When > 1, 
a logfile named `MSstats_dataProcess_log_progress.log` is created to 
track progress. Only works for Linux & Mac OS. Default is 1.}
}
\description{
Process MS data: clean, normalize and summarize before differential analysis
}
\examples{
# Consider a raw data (i.e. SRMRawData) for a label-based SRM experiment from a yeast study
# with ten time points (T1-T10) of interests and three biological replicates.
# It is a time course experiment. The goal is to detect protein abundance changes
# across time points.
head(SRMRawData)
# Log2 transformation and normalization are applied (default)
QuantData<-dataProcess(SRMRawData, use_log_file = FALSE)
head(QuantData$FeatureLevelData)
# Log10 transformation and normalization are applied
QuantData1<-dataProcess(SRMRawData, logTrans=10, use_log_file = FALSE)
head(QuantData1$FeatureLevelData)
# Log2 transformation and no normalization are applied
QuantData2<-dataProcess(SRMRawData,normalization=FALSE, use_log_file = FALSE)
head(QuantData2$FeatureLevelData)

}
